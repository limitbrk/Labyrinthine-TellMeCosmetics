<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <AssemblyName>TellMeCosmetics</AssemblyName>
    <Product>Tell Me Cosmetics</Product>
    <Version>0.1.4</Version>
    <RootNamespace>TellMeCosmetics</RootNamespace>
    <Author>LimitBRK</Author>
    
    <!-- Config -->
    <TargetFramework>net6.0</TargetFramework>
    <LangVersion>latest</LangVersion>
    <OutputPath>./build/</OutputPath>
    <DebugSymbols>false</DebugSymbols>
    <DebugType>None</DebugType>
    <GenerateDependencyFile>false</GenerateDependencyFile>
    
  </PropertyGroup>
  <ItemGroup>
    <!-- Mod Loader -->
    <PackageReference Include="LavaGang.MelonLoader" Version="0.7.0" />
    <!-- Unity -->
    <PackageReference Include="OpenMod.UnityEngine" Version="3.8.10" />
    <PackageReference Include="Unity" Version="5.11.10" />
    <Reference Include="Il2Cppmscorlib">
      <HintPath>..\dlls\Il2Cppmscorlib.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="Il2CppInterop.Runtime">
      <HintPath>..\dlls\Il2CppInterop.Runtime.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="UnityEngine.CoreModule">
      <HintPath>..\libs\UnityEngine.CoreModule.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="Unity.TextMeshPro">
      <HintPath>..\dlls\Unity.TextMeshPro.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="Unity.TextMeshPro">
      <HintPath>..\dlls\Unity.TextMeshPro.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <!-- GAME Based -->
    <Reference Include="Assembly-CSharp">
      <HintPath>..\dlls\Assembly-CSharp.dll</HintPath>
      <Private>false</Private>
    </Reference>
    
    <!-- ThunderStore Package -->
    <PackageFiles Include="package\**\*.*" />
  </ItemGroup>
  <Target Name="CopyFlatPackageFiles" AfterTargets="Build">
    <Copy
      SourceFiles="@(PackageFiles)"
      DestinationFiles="@(PackageFiles->'$(OutputPath)%(Filename)%(Extension)')"
      SkipUnchangedFiles="true" />
  </Target>
  <Target Name="GenerateManifest" AfterTargets="Build">
    <WriteLinesToFile
      File="$(OutputPath)manifest.json"
      Lines='{;
            "name": "$(AssemblyName)",;
            "version_number": "$(Version)",;
            "website_url": "https://github.com/limitbrk/Labyrinthine-TellMeCosmetics",;
            "description": "Press `Tab` to check what cosmetic is currently in the area.",;
            "dependencies": [;
            "LavaGang-MelonLoader-0.7.0";
            ];
            }'
      Overwrite="true" />
  </Target>
  
  <!-- Package as zip -->
  <Target Name="ZipOutputAfterBuild" AfterTargets="Build">
    <PropertyGroup>
      <OutputDir>$(OutputPath)</OutputDir>
      <ZipFileName>$(AssemblyName)-v$(Version).zip</ZipFileName>
      <ZipFullPath>$(OutputDir)\$(ZipFileName)</ZipFullPath>
    </PropertyGroup>
    
    <ItemGroup>
      <FilesToDelete Include="$(OutputDir)\*.zip" />
    </ItemGroup>
    <Delete Files="@(FilesToDelete)" />
    
    <!-- Cross-platform zip using Exec and shell detection -->
    <Exec Condition=" '$(OS)' == 'Windows_NT' "
          Command="powershell -Command &quot;Compress-Archive -Path '$(OutputDir)\*' -DestinationPath '$(ZipFullPath)' -Force&quot;" />
    
    <Exec Condition=" '$(OS)' != 'Windows_NT' "
          Command="bash -c &quot;cd '$(OutputDir)' &amp;&amp; zip -r '$(ZipFileName)' .&quot;" />
  </Target>
  
  <!-- Generated ModInfo.cs -->
  <ItemGroup>
    <Compile Remove="generated\**\*.cs" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="generated\ModInfo.cs" />
  </ItemGroup>
  <Target Name="WriteModInfoFile" BeforeTargets="BeforeBuild">
    <ItemGroup>
      <ModInfoLines Include="internal static class ModInfo {"/>
      <ModInfoLines Include="public const string Name = &quot;$(Product)&quot;%3B"/>
      <ModInfoLines Include="public const string Version = &quot;$(Version)&quot;%3B"/>
      <ModInfoLines Include="public const string Author = &quot;$(Author)&quot;%3B"/>
      <ModInfoLines Include="}"/>
    </ItemGroup>
    
    <WriteLinesToFile 
      File="Generated\ModInfo.cs" 
      Lines="@(ModInfoLines)" 
      Overwrite="true" 
      Encoding="UTF-8" />
  </Target>
  
</Project>